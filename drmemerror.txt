Dr. Memory version 1.8.0 build 8 built on Sep  9 2014 16:27:02
Dr. Memory results for pid 2072: "rasterman.exe"
Application cmdline: "rasterman.exe vector2raster "F:\dev\Deploy\Test\Assessor_Book_map\Assessor Book Map.shp" ../Test/rasterman/Vector2Raster.tif "Assessor Book Map" Book-Map 10"
Recorded 108 suppression(s) from default c:\Program Files (x86)\Dr. Memory\bin\suppress-default.txt

Error #1: UNADDRESSABLE ACCESS of freed memory: reading 0x0396fa5c-0x0396fa60 4 byte(s)
# 0 KERNEL32.dll!InterlockedExchangeAdd                         +0xb      (0x76d3616d <KERNEL32.dll+0x2616d>)
# 1 gdal110.dll!GDALPamRasterBand::PamInitialize                +0x17a4c  (0x62f58c31 <gdal110.dll+0x28c31>)
# 2 gdal110.dll!GDALPamRasterBand::PamInitialize                +0xe5199  (0x6302637e <gdal110.dll+0xf637e>)
# 3 gdal110.dll!OGRSpatialReference::Reference                  +0x12     (0x635e1dc3 <gdal110.dll+0x6b1dc3>)
# 4 gdal110.dll!OGRGeometry::assignSpatialReference             +0x37     (0x635ee498 <gdal110.dll+0x6be498>)
# 5 gdal110.dll!S57GenerateStandardAttributes                   +0x184c3  (0x6357e5e4 <gdal110.dll+0x64e5e4>)
# 6 RasterManager.dll!RasterManager::Raster::VectortoRaster      [f:\dev\rastermanager\rastermanager\rastermanager\raster_vector.cpp:81]
# 7 RasterManager.dll!RasterManager::Raster::VectortoRaster      [f:\dev\rastermanager\rastermanager\rastermanager\raster_vector.cpp:188]
# 8 RasterManager::RasterManEngine::VectorToRaster               [f:\dev\rastermanager\rastermanager\rastermanconsole\rastermanengine.cpp:654]
# 9 RasterManager::RasterManEngine::Run                          [f:\dev\rastermanager\rastermanager\rastermanconsole\rastermanengine.cpp:74]
#10 main                                                         [f:\dev\rastermanager\rastermanager\rastermanconsole\main.cpp:18]
Note: @0:00:39.739 in thread 3628
Note: next higher malloc: 0x0396fb98-0x0396fbc8
Note: prev lower malloc:  0x0396f300-0x0396f330
Note: 0x0396fa5c-0x0396fa60 overlaps memory 0x0396fa30-0x0396fa60 that was freed here:
Note: # 0 replace_operator_delete_nothrow_nomatch               [d:\drmemory_package\common\alloc_replace.c:2762]
Note: # 1 gdal110.dll!GDALPamRasterBand::PamInitialize         +0x61de9  (0x62fa2fce <gdal110.dll+0x72fce>)
Note: # 2 gdal110.dll!GDALPamRasterBand::PamInitialize         +0xa905c  (0x62fea241 <gdal110.dll+0xba241>)
Note: # 3 gdal110.dll!GDALPamRasterBand::PamInitialize         +0xb067a  (0x62ff185f <gdal110.dll+0xc185f>)
Note: # 4 gdal110.dll!GDALPamRasterBand::PamInitialize         +0xb0593  (0x62ff1778 <gdal110.dll+0xc1778>)
Note: # 5 gdal110.dll!GDALPamRasterBand::PamInitialize         +0xb0d73  (0x62ff1f58 <gdal110.dll+0xc1f58>)
Note: instruction: lock xadd   (%ecx) %eax -> (%ecx) %eax

Error #2: UNADDRESSABLE ACCESS of freed memory: reading 0x0396fa5c-0x0396fa60 4 byte(s)
# 0 KERNEL32.dll!InterlockedExchangeAdd                         +0xb      (0x76d3616d <KERNEL32.dll+0x2616d>)
# 1 gdal110.dll!GDALPamRasterBand::PamInitialize                +0x17a4c  (0x62f58c31 <gdal110.dll+0x28c31>)
# 2 gdal110.dll!GDALPamRasterBand::PamInitialize                +0xe5199  (0x6302637e <gdal110.dll+0xf637e>)
# 3 gdal110.dll!OGRSpatialReference::Reference                  +0x12     (0x635e1dc3 <gdal110.dll+0x6b1dc3>)
# 4 gdal110.dll!OGRGeometry::assignSpatialReference             +0x37     (0x635ee498 <gdal110.dll+0x6be498>)
# 5 gdal110.dll!OGRPolygon::clone                               +0x79     (0x635f4aba <gdal110.dll+0x6c4aba>)
# 6 RasterManager.dll!RasterManager::Raster::VectortoRaster      [f:\dev\rastermanager\rastermanager\rastermanager\raster_vector.cpp:94]
# 7 RasterManager.dll!RasterManager::Raster::VectortoRaster      [f:\dev\rastermanager\rastermanager\rastermanager\raster_vector.cpp:188]
# 8 RasterManager::RasterManEngine::VectorToRaster               [f:\dev\rastermanager\rastermanager\rastermanconsole\rastermanengine.cpp:654]
# 9 RasterManager::RasterManEngine::Run                          [f:\dev\rastermanager\rastermanager\rastermanconsole\rastermanengine.cpp:74]
#10 main                                                         [f:\dev\rastermanager\rastermanager\rastermanconsole\main.cpp:18]
Note: @0:00:39.772 in thread 3628
Note: next higher malloc: 0x0396fb98-0x0396fbc8
Note: prev lower malloc:  0x0396f300-0x0396f330
Note: 0x0396fa5c-0x0396fa60 overlaps memory 0x0396fa30-0x0396fa60 that was freed here:
Note: # 0 replace_operator_delete_nothrow_nomatch               [d:\drmemory_package\common\alloc_replace.c:2762]
Note: # 1 gdal110.dll!GDALPamRasterBand::PamInitialize         +0x61de9  (0x62fa2fce <gdal110.dll+0x72fce>)
Note: # 2 gdal110.dll!GDALPamRasterBand::PamInitialize         +0xa905c  (0x62fea241 <gdal110.dll+0xba241>)
Note: # 3 gdal110.dll!GDALPamRasterBand::PamInitialize         +0xb067a  (0x62ff185f <gdal110.dll+0xc185f>)
Note: # 4 gdal110.dll!GDALPamRasterBand::PamInitialize         +0xb0593  (0x62ff1778 <gdal110.dll+0xc1778>)
Note: # 5 gdal110.dll!GDALPamRasterBand::PamInitialize         +0xb0d73  (0x62ff1f58 <gdal110.dll+0xc1f58>)
Note: instruction: lock xadd   (%ecx) %eax -> (%ecx) %eax

Error #5: UNADDRESSABLE ACCESS of freed memory: reading 0x0396fa5c-0x0396fa60 4 byte(s)
# 0 KERNEL32.dll!InterlockedExchangeAdd                         +0xb      (0x76d3616d <KERNEL32.dll+0x2616d>)
# 1 gdal110.dll!GDALPamRasterBand::PamInitialize                +0x17a4c  (0x62f58c31 <gdal110.dll+0x28c31>)
# 2 gdal110.dll!GDALPamRasterBand::PamInitialize                +0xe5199  (0x6302637e <gdal110.dll+0xf637e>)
# 3 gdal110.dll!OGRSpatialReference::Reference                  +0x12     (0x635e1dc3 <gdal110.dll+0x6b1dc3>)
# 4 gdal110.dll!OGRGeometry::assignSpatialReference             +0x37     (0x635ee498 <gdal110.dll+0x6be498>)
# 5 gdal110.dll!S57GenerateStandardAttributes                   +0x184c3  (0x6357e5e4 <gdal110.dll+0x64e5e4>)
# 6 RasterManager.dll!RasterManager::Raster::VectortoRaster      [f:\dev\rastermanager\rastermanager\rastermanager\raster_vector.cpp:109]
# 7 RasterManager.dll!RasterManager::Raster::VectortoRaster      [f:\dev\rastermanager\rastermanager\rastermanager\raster_vector.cpp:188]
# 8 RasterManager::RasterManEngine::VectorToRaster               [f:\dev\rastermanager\rastermanager\rastermanconsole\rastermanengine.cpp:654]
# 9 RasterManager::RasterManEngine::Run                          [f:\dev\rastermanager\rastermanager\rastermanconsole\rastermanengine.cpp:74]
#10 main                                                         [f:\dev\rastermanager\rastermanager\rastermanconsole\main.cpp:18]
Note: @0:00:39.951 in thread 3628
Note: next higher malloc: 0x0396fb98-0x0396fbc8
Note: prev lower malloc:  0x0396f300-0x0396f330
Note: 0x0396fa5c-0x0396fa60 overlaps memory 0x0396fa30-0x0396fa60 that was freed here:
Note: # 0 replace_operator_delete_nothrow_nomatch               [d:\drmemory_package\common\alloc_replace.c:2762]
Note: # 1 gdal110.dll!GDALPamRasterBand::PamInitialize         +0x61de9  (0x62fa2fce <gdal110.dll+0x72fce>)
Note: # 2 gdal110.dll!GDALPamRasterBand::PamInitialize         +0xa905c  (0x62fea241 <gdal110.dll+0xba241>)
Note: # 3 gdal110.dll!GDALPamRasterBand::PamInitialize         +0xb067a  (0x62ff185f <gdal110.dll+0xc185f>)
Note: # 4 gdal110.dll!GDALPamRasterBand::PamInitialize         +0xb0593  (0x62ff1778 <gdal110.dll+0xc1778>)
Note: # 5 gdal110.dll!GDALPamRasterBand::PamInitialize         +0xb0d73  (0x62ff1f58 <gdal110.dll+0xc1f58>)
Note: instruction: lock xadd   (%ecx) %eax -> (%ecx) %eax

Error #6: UNADDRESSABLE ACCESS beyond heap bounds: reading 0x0396fa5c-0x0396fa60 4 byte(s)
# 0 KERNEL32.dll!InterlockedExchangeAdd                         +0xb      (0x76d3616d <KERNEL32.dll+0x2616d>)
# 1 gdal110.dll!GDALPamRasterBand::PamInitialize                +0x17a4c  (0x62f58c31 <gdal110.dll+0x28c31>)
# 2 gdal110.dll!GDALPamRasterBand::PamInitialize                +0xe5199  (0x6302637e <gdal110.dll+0xf637e>)
# 3 gdal110.dll!OGRSpatialReference::Reference                  +0x12     (0x635e1dc3 <gdal110.dll+0x6b1dc3>)
# 4 gdal110.dll!OGRGeometry::assignSpatialReference             +0x37     (0x635ee498 <gdal110.dll+0x6be498>)
# 5 gdal110.dll!OGRMultiPolygon::clone                          +0x79     (0x635f811a <gdal110.dll+0x6c811a>)
# 6 RasterManager.dll!RasterManager::Raster::VectortoRaster      [f:\dev\rastermanager\rastermanager\rastermanager\raster_vector.cpp:94]
# 7 RasterManager.dll!RasterManager::Raster::VectortoRaster      [f:\dev\rastermanager\rastermanager\rastermanager\raster_vector.cpp:188]
# 8 RasterManager::RasterManEngine::VectorToRaster               [f:\dev\rastermanager\rastermanager\rastermanconsole\rastermanengine.cpp:654]
# 9 RasterManager::RasterManEngine::Run                          [f:\dev\rastermanager\rastermanager\rastermanconsole\rastermanengine.cpp:74]
#10 main                                                         [f:\dev\rastermanager\rastermanager\rastermanconsole\main.cpp:18]
Note: @0:00:40.482 in thread 3628
Note: next higher malloc: 0x0396fa78-0x0396fa90
Note: prev lower malloc:  0x0396fa28-0x0396fa40
Note: instruction: lock xadd   (%ecx) %eax -> (%ecx) %eax

Error #7: UNADDRESSABLE ACCESS beyond heap bounds: reading 0x0396fa5c-0x0396fa60 4 byte(s)
# 0 gdal110.dll!OGRSpatialReference::Dereference                +0xa      (0x635e1e1a <gdal110.dll+0x6b1e1a>)
# 1 gdal110.dll!OGRSpatialReference::Release                    +0x2c     (0x635e1ebd <gdal110.dll+0x6b1ebd>)
# 2 gdal110.dll!OGRGeometry::~OGRGeometry                       +0x23     (0x635ee054 <gdal110.dll+0x6be054>)
# 3 gdal110.dll!OGRGeometryCollection::~OGRGeometryCollection   +0x4c     (0x635f664d <gdal110.dll+0x6c664d>)
# 4 gdal110.dll!GDALPamRasterBand::PamInitialize                +0x93a2a  (0x62fd4c0f <gdal110.dll+0xa4c0f>)
# 5 gdal110.dll!GDALPamRasterBand::PamInitialize                +0x93b28  (0x62fd4d0d <gdal110.dll+0xa4d0d>)
# 6 gdal110.dll!OGRFeature::~OGRFeature                         +0x3d     (0x6360dcae <gdal110.dll+0x6ddcae>)
# 7 gdal110.dll!GDALPamRasterBand::PamInitialize                +0xe5a98  (0x63026c7d <gdal110.dll+0xf6c7d>)
# 8 gdal110.dll!OGRFeature::DestroyFeature                      +0x25     (0x6360def6 <gdal110.dll+0x6ddef6>)
# 9 RasterManager.dll!RasterManager::Raster::VectortoRaster      [f:\dev\rastermanager\rastermanager\rastermanager\raster_vector.cpp:108]
#10 RasterManager.dll!RasterManager::Raster::VectortoRaster      [f:\dev\rastermanager\rastermanager\rastermanager\raster_vector.cpp:188]
#11 RasterManager::RasterManEngine::VectorToRaster               [f:\dev\rastermanager\rastermanager\rastermanconsole\rastermanengine.cpp:654]
#12 RasterManager::RasterManEngine::Run                          [f:\dev\rastermanager\rastermanager\rastermanconsole\rastermanengine.cpp:74]
#13 main                                                         [f:\dev\rastermanager\rastermanager\rastermanconsole\main.cpp:18]
Note: @0:00:40.501 in thread 3628
Note: next higher malloc: 0x0396fa78-0x0396fa90
Note: prev lower malloc:  0x0396fa28-0x0396fa40
Note: instruction: cmp    0x24(%eax) $0x00000000

Error #9: UNADDRESSABLE ACCESS beyond heap bounds: reading 0x0396fa5c-0x0396fa60 4 byte(s)
# 0 gdal110.dll!OGRSpatialReference::Dereference                +0xa      (0x635e1e1a <gdal110.dll+0x6b1e1a>)
# 1 gdal110.dll!OGRSpatialReference::Release                    +0x2c     (0x635e1ebd <gdal110.dll+0x6b1ebd>)
# 2 gdal110.dll!S57GenerateStandardAttributes                   +0x17046  (0x6357d167 <gdal110.dll+0x64d167>)
# 3 gdal110.dll!S57GenerateStandardAttributes                   +0x1ce9e  (0x63582fbf <gdal110.dll+0x652fbf>)
# 4 gdal110.dll!S57ClassRegistrar::FindAttrByAcronym            +0x6e8e   (0x634cfcaf <gdal110.dll+0x59fcaf>)
# 5 gdal110.dll!S57ClassRegistrar::FindAttrByAcronym            +0x89ee   (0x634d180f <gdal110.dll+0x5a180f>)
# 6 gdal110.dll!OGRSFDriverRegistrar::ReleaseDataSource         +0xd2     (0x6342cc73 <gdal110.dll+0x4fcc73>)
# 7 gdal110.dll!OGRDataSource::Release                          +0x16     (0x63435467 <gdal110.dll+0x505467>)
# 8 RasterManager.dll!RasterManager::Raster::VectortoRaster      [f:\dev\rastermanager\rastermanager\rastermanager\raster_vector.cpp:136]
# 9 RasterManager.dll!RasterManager::Raster::VectortoRaster      [f:\dev\rastermanager\rastermanager\rastermanager\raster_vector.cpp:188]
#10 RasterManager::RasterManEngine::VectorToRaster               [f:\dev\rastermanager\rastermanager\rastermanconsole\rastermanengine.cpp:654]
#11 RasterManager::RasterManEngine::Run                          [f:\dev\rastermanager\rastermanager\rastermanconsole\rastermanengine.cpp:74]
#12 main                                                         [f:\dev\rastermanager\rastermanager\rastermanconsole\main.cpp:18]
Note: @0:03:32.011 in thread 3628
Note: next higher malloc: 0x0396fa78-0x0396fa90
Note: prev lower malloc:  0x0396fa28-0x0396fa40
Note: instruction: cmp    0x24(%eax) $0x00000000


Error #11: LEAK 20 direct bytes 0x0393aeb0-0x0393aec4 + 172 indirect bytes
# 0 replace_operator_new_nomatch                                 [d:\drmemory_package\common\alloc_replace.c:2732]
# 1 gdal110.dll!OGRPolygon::clone                               +0x2e     (0x635f4a6f <gdal110.dll+0x6c4a6f>)
# 2 RasterManager.dll!RasterManager::Raster::VectortoRaster      [f:\dev\rastermanager\rastermanager\rastermanager\raster_vector.cpp:94]
# 3 RasterManager.dll!RasterManager::Raster::VectortoRaster      [f:\dev\rastermanager\rastermanager\rastermanager\raster_vector.cpp:188]
# 4 RasterManager::RasterManEngine::VectorToRaster               [f:\dev\rastermanager\rastermanager\rastermanconsole\rastermanengine.cpp:654]
# 5 RasterManager::RasterManEngine::Run                          [f:\dev\rastermanager\rastermanager\rastermanconsole\rastermanengine.cpp:74]
# 6 main                                                         [f:\dev\rastermanager\rastermanager\rastermanconsole\main.cpp:18]

